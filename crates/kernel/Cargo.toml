[package]
name = "deltalake-kernel"
version = "0.29.2"
authors.workspace = true
keywords.workspace = true
readme.workspace = true
edition.workspace = true
homepage.workspace = true
description = "Delta Lake kernel - snapshot and schema management"
license.workspace = true
repository.workspace = true
rust-version.workspace = true

[dependencies]
deltalake-protocol = { version = "0.29.2", path = "../protocol" }

# Delta kernel
delta_kernel.workspace = true

# Arrow
arrow = { workspace = true }
arrow-arith = { workspace = true }
arrow-array = { workspace = true, features = ["chrono-tz"] }
arrow-buffer = { workspace = true }
arrow-cast = { workspace = true }
arrow-ipc = { workspace = true }
arrow-ord = { workspace = true }
arrow-row = { workspace = true }
arrow-schema = { workspace = true, features = ["serde"] }
arrow-select = { workspace = true }
parquet = { workspace = true, features = ["async", "object_store"] }
object_store = { workspace = true }

# Async runtime
tokio = { workspace = true, features = ["macros", "rt", "sync", "fs"] }
futures = { workspace = true }
async-trait = { workspace = true }

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }

# Error handling
thiserror = { workspace = true }

# Tracing
tracing = { workspace = true }
pin-project-lite = "^0.2.7"

# Utilities
chrono = { workspace = true }
uuid = { workspace = true }
url = { workspace = true }
bytes = { workspace = true }
itertools = "0.14"
indexmap = "2.2.1"
percent-encoding = "2"
percent-encoding-rfc3986 = { workspace = true }

# Optional datafusion support
datafusion = { workspace = true, optional = true }

[features]
datafusion = ["dep:datafusion"]

